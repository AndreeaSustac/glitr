description = "GLiTR"

group = 'com.nfl.dm.shield'
version = '1.0.0'
project.ext.app_name = 'glitr'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1-rc3"
    }
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

jacoco {
    toolVersion = "0.7.5.201505241946"
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8
//noinspection GroovyUnusedAssignment
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // GraphQL dependencies
    compile("com.graphql-java:graphql-java:2.1.0")

    // Commons dependencies
    compile("org.apache.commons:commons-lang3:3.4")
    compile("commons-beanutils:commons-beanutils:1.9.2")

    // Google dependencies
    compile("com.google.code.findbugs:jsr305:3.0.0")
    compile("com.google.guava:guava:19.0")
    compile("com.googlecode.gentyref:gentyref:1.2.0")

    // Misc dependencies
    compile("io.reactivex:rxjava:1.1.3")
    compile("javax.validation:validation-api:1.1.0.Final")

     // Spock test dependencies
    testCompile("junit:junit:4.12")
    testCompile("org.spockframework:spock-core:1.0-groovy-2.4")
    testCompile("org.codehaus.groovy:groovy-all:2.4.4")
    testCompile("com.fasterxml.jackson.core:jackson-databind:2.6.2")
}

task testSpock(type: Test) {
    useJUnit()
}

test.dependsOn 'testSpock'

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

sonarqube {
    //noinspection GroovyAssignabilityCheck
    properties {
        //noinspection GroovyAssignabilityCheck
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/testSpock.exec"
        //noinspection GroovyAssignabilityCheck
        property "sonar.coverage.exclusions", "**/*Exception.java"
        property "sonar.projectKey",  project.ext.app_name
        property "sonar.projectName", project.ext.app_name
        property "sonar.projectVersion", project.version
        property "sonar.host.url", "http://sonar.dm.nfl.com/"
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.scm.provider", "git"
    }
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    // check for updates every build
    // noinspection GroovyAssignabilityCheck
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

sourceSets {
    //tell gradle where the resource folders (used for inclusion in the jar too)
    main {
        resources.srcDirs = ["src/main/resources", "generatedsources/"]
    }
}

jar {
    from "LICENSE"
    manifest {
        attributes(
                "Specification-Title": project.name,
                "Specification-Version": project.version,
                "Implementation-Version": project.version,
        )
    }
}
